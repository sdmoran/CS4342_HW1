% Load data
ratings = load('jester_ratings.dat');

% Get the sum of all joke ratings and the total number of jokes
ratings_total = sum(ratings(1:end, 3));
n = length(ratings(1:end, 3));

% Mu is simply the sum of all ratings divided by the number of ratings
mu = ratings_total / n;

sigma = 0;

% Calculate sigma
for i = 1 : length(ratings(1:end, 3))
    sigma = sigma + (1 / n) * (ratings(i, 3) - mu)^2;
end

% Normalize data
data = ratings(1:end, 3);
norm_data = (data - min(data)) / ((max(data)-min(data)));
disp(norm_data(1:10))

% Take sqrt of sigma at the end
sigma = sqrt(sigma);

% Print statistics about the data
disp("Total # ratings: " + ratings_total);
disp("n = " + n);
disp("mu = " + ratings_total / n);
disp("sigma = " + sigma);

% Draw histogram
bins = 10;
%histogram(ratings(1:end, 3), bins, 'Normalization', 'pdf');
histogram(ratings(1:end, 3), 'Normalization', 'pdf');
title(bins + " bins");
hold on

% Set up and draw the normal PDF we've found from MLE
pd = makedist('Normal','mu', mu,'sigma', sigma);
x = -10:10;
y = pdf(pd, x);
plot(x, y, 'r');

% Set up MLE of the logistic normal PDF


disp("0 idx: " + find(norm_data==0)) % log of 0 is undefined, so we can't use the function there.

% We can't include 0 and 1 in our MLE calculation, because our function is
% undefined at both 0 (log(0) undefined) and 1 (division by 0 undefined).

% There is one data point that normalizes to 0, and 27 data points that
% normalize to 1. So we calculate the MLE using indices [1, n-28].
sorted = sort(norm_data);
range = (2:n-28);
mu_lognormal = sum(calc_logit(sorted(range))) / length(range);
sigma_lognormal = (sum(calc_logit(sorted(range)) - mu_lognormal) .^ 2);
disp("Mu_Lognormal: " +  mu_lognormal)
disp("Sigma_Lognormal: " + sigma_lognormal)


disp("X vals needed: " + length(0:0.001:1));
x_vals = -10:0.02:10;

l = Logistic_NormalPDF(0:0.001:1, mu_lognormal, sigma_lognormal);
plot(x_vals, l);


%hf = histfit(norm_data, 60, 'beta');
%disp(hf(1))
%disp(get(hf(2),'XData')); 
%disp(get(hf(2),'YData'));

%scaledx = -10:10;
%j = Scaled_BetaPDF(scaledx, 2, 2, -10, 10);
%plot(j)

% Plot PDF on top of histogram
%plot(x, y, 'r')

%xpts = linspace(0, 1, 1000);
%l = Logistic_NormalPDF(linspace(0, 1, 1000), 1.0006, 0.4665);
%plot(xpts, l);
%m = mean(l, 'omitnan');
%ex2 = mean(l.^2, 'omitnan');


function logit = calc_logit(x)
logit = log(x ./ (1 - x ));
end

function lognormal = Logistic_NormalPDF(x, mu, sigma)
lognormal = (1 ./ (sigma .* sqrt(2*pi))).* (1./(x .* (1-x))) .* exp(-(calc_logit(x) - mu).^2 / (2 .* sigma^2));
end

function PDF = Scaled_BetaPDF(y, a, b, p, q)
PDF = ( (y-p).^(a-1) .* (q - y).^(b-1) ) ./ ( (q - p).^(a+b-1) .* beta(a,b) );
end